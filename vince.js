const Discord = require("discord.js");
const Client = new Discord.Client;

const fs = require("fs");
let data = require("./config.json");

Client.on("ready", () => {
    console.log("Bot connected.");

    Client.user.setPresence({
       activity: {
           name: "Instagram",
           type: "WATCHING"
       },
       status: "online"
    });

    let update = false;

    if (data.rulesId == null) {
        updateMessages();
        update = true;
    } else {
        Client.channels.cache.get("800370818848784404").messages.fetch(data["rulesId"]).then(console.log("Message still available!")).catch(err => {
            updateMessages();
            update = true;
        });
    }

    if (!update) {
        if (data.roleId == null) {
            updateMessages();
        } else {
            Client.channels.cache.get("800370818848784404").messages.fetch(data["roleId"]).then(console.log("Message still available!")).catch(err => {
                updateMessages();
            });
        }
    }
});

Client.on("messageDelete", message => {
    let id = message.id;

    if (id == data.roleId || id == data.rulesId) {
        updateMessages();
    }
});

Client.on("messageReactionAdd", async (reaction, user) => {
    let guild = reaction.message.channel.guild;

    if (reaction.message.id == data.roleId) {
        if (!guild.member(user).roles.cache.has("800368579387850782")) {
            return;
        }

        if (reaction._emoji.name == "üì∑") {
            guild.member(user).roles.add(guild.roles.cache.find(role => role.name == "Photographe"));
        } else if (reaction._emoji.name == "üé•") {
            guild.member(user).roles.add(guild.roles.cache.find(role => role.name == "Vid√©aste"));
        }
    } else if (reaction.message.id == data.rulesId) {
        if (reaction._emoji.name == "‚úÖ") {
            guild.member(user).roles.add(guild.roles.cache.find(role => role.name == "Membre"));
        }
    }
});

function createRoleMessage() {
    let embed = new Discord.MessageEmbed()
        .setColor("#b960d6")
        .setTitle("R√¥les sp√©cifiques")
        .setDescription("Le r√¥le <@&800368579387850782> est obligatoire pour pouvoir avoir un r√¥le sp√©cifique.")
        .setThumbnail(Client.user.displayAvatarURL())
        .addFields({
            name: "A quoi servent les r√¥les sp√©cifiques ?", 
            value: "Les r√¥les sp√©cifiques servent √† pouvoir parler dans les diff√©rents salons de discussion concernant, soit la photographie, soit la vid√©o.",
            inline: false,
        },
        {
            name: "Comment obtenir un r√¥le sp√©cifique ?", 
            value: "Pour obtenir un r√¥le sp√©cifique, tu dois r√©agir avec les r√©actions sous ce message: üì∑ pour le r√¥le <@&800378361884049431>, üé• pour le r√¥le <@&800378395165720626>. Tu peux avoir les deux r√¥les si tu le souhaites.",
            inline: false,
        },
        {
            name: "R√¥le Exp√©riment√©:",
            value: "Le r√¥le <@&800399081591537724> est donn√© par les administrateurs aux personnes qui ont su montrer une grande exp√©rience ou ont su se d√©marquer des autres, et qui s'impliquent tr√®s souvent dans la communaut√©, en partageant ou en aidant les autres. Le demander diminuera tes chances de l'avoir, et il pourra m√™me t'√™tre refuser d√©finitivement si tu es trop insistant.",
            inline: false,
        })
        .setTimestamp()
        .setFooter("Made by Spetnix ‚ù§Ô∏è");

    Client.channels.cache.get("800370818848784404").send(embed).then(m => {
        m.react("üì∑");
        m.react("üé•");
        
        let obj = data;

        obj.roleId = m.id;

        fs.writeFile("./config.json", JSON.stringify(obj), "utf-8", err => {
            if (err) throw err;
        })
    });
}

function createRulesMessage() {
    let embed = new Discord.MessageEmbed()
        .setColor("#09db3f")
        .setTitle("R√®glement de la communaut√©")
        .setDescription("Les r√®gles sont list√©es ici. Tu dois lire et valider ce message pour avoir le r√¥le <@&800368579387850782> et avoir acc√®s aux salons.")
        .setThumbnail(Client.user.displayAvatarURL())
        .addFields({
            name: "1. Respecter les autres.", 
            value: "Il est bien √©videmment obligatoire de respecter les autres. Evite de r√©pondre par toi-m√™me si quelqu'un cherche les probl√®mes, et contacte directement un membre du staff.",
            inline: false,
        },
        {
            name: "2. Ne pas spammer dans les salons.", 
            value: "Le spam est formellement interdit. Il n'est aussi pas autoris√© de spammer un membre de la communaut√© par message priv√©. Si personne ne r√©pond tout de suite √† ta question, attends un peu. Tu pourras la reposter plus tard si vraiment personne n'y a r√©pondu.",
            inline: false,
        },
        {
            name: "3. Pas de contenu offensant/interdit.", 
            value: "Tout contenu offensant/r√©serv√© aux adultes ou non en rapport avec l'ensemble de la communaut√© est INTERDIT. De lourdes sanctions pourront √™tre appliqu√©es en cas de non respect de cette r√®gle.",
            inline: false,
        },
        {
            name: "4. Respect des salons.",
            value: "Nous te demandons aussi de respecter les th√®mes des salons. Il est inutile de poster des questions relatives √† la vid√©o dans les salons d√©di√©s √† la photographie par exemple.",
            inline: false,
        },
        {
            name: "\u200b",
            value: "Si ces r√®gles ne sont pas respect√©es, tu seras averti par le staff. Des sanctions plus ou moins importantes pourront √™tre prises √† ton √©gard en cas de r√©cidive. Si tu vois quelqu'un qui ne respecte pas ces r√®gles, nous te prions de contacter un membre du staff.",
            inline: false,
        },
        {
            name: "\u200b",
            value: "---------------------------------------------------------------------------",
            inline: false,
        },
        {
            name: "\u200b",
            value: "Apr√®s avoir valid√© ce message, n'h√©site pas √† faire une pr√©sentation courte de toi-m√™me dans le salon correspondant √† ton d√©partement (ces salons sont en bas de la liste).",
            inline: false,
        },
        {
            name: "\u200b",
            value: "Pour tout probl√®me li√© √† Discord et √† son fonctionnement, envoie un message dans le salon <#800396243871334440>. Un membre du staff ou de la communaut√© te r√©pondra.",
            inline: false,
        },
        {
            name: "\u200b",
            value: "Si tu as lu et compris ce r√®glement, r√©agis avec ‚úÖ juste en dessous de ce message pour avoir le r√¥le <@&800368579387850782>.",
            inline: false,
        })
        .setTimestamp()
        .setFooter("Made by Spetnix ‚ù§Ô∏è");

    Client.channels.cache.get("800370818848784404").send(embed).then(m => {
        m.react("‚úÖ");
        
        let obj = data;

        obj.rulesId = m.id;

        fs.writeFile("./config.json", JSON.stringify(obj), "utf-8", err => {
            if (err) throw err;
        })
    });
}

function updateMessages() {
    Client.channels.cache.get("800370818848784404").bulkDelete(2, true)
    .then(console.log("Clear correctly done!"));

    createRulesMessage();
    createRoleMessage();
}

Client.login(process.env.TOKEN);
